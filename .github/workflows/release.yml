# Note: see https://github.com/overhangio/tutor/releases for a well-developed release schedule
# We could use a CHANGELOG generator to forward information about changes...
name: Sparrow release generation 
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build_test:
    # Note: for deployment, we move to an older version of Ubuntu
    # https://pyinstaller.readthedocs.io/en/stable/usage.html
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Update submodules
        run: git submodule update --init --recursive

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

        # Bundling
      - name: Bundle command-line application with PyInstaller
        run: make build && sudo make install

      - name: Run Sparrow tests for built application
        run: sparrow test

      - name: Zip up command-line application
        # For zipping, change directory to the dist directory.
        run: tar -czv -f ./_cli/dist/sparrow.tar.gz -C _cli/dist/sparrow .

      - uses: actions/upload-artifact@v2
        with:
          name: sparrow-cli-linux
          path: ./_cli/dist/sparrow.tar.gz
          retention-days: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: backend_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/earthcubegeochron/sparrow/backend

      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: backend
          push: true
          tags: ${{ steps.backend_meta.outputs.tags }}
          labels: ${{ steps.backend_meta.outputs.labels }}

      - name: Extract metadata (tags, labels) for Docker
        id: frontend_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/earthcubegeochron/sparrow/frontend

      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: frontend
          push: true
          tags: ${{ steps.frontend_meta.outputs.tags }}
          labels: ${{ steps.frontend_meta.outputs.labels }}

  build_darwin:
    # Note: for deployment, we might need to move to an older version of Ubuntu
    # https://pyinstaller.readthedocs.io/en/stable/usage.html
    runs-on: macOS-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Update submodules
        run: git submodule update --init --recursive

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

        # Bundling
      - name: Bundle command-line application with PyInstaller
        run: make build && sudo make install

      # Cannot run tests on Mac because Docker doesn't run on MacOS in Github Actions
      - name: Zip up command-line application
        run: tar -czv -f ./_cli/dist/sparrow.tar.gz -C _cli/dist/sparrow .

      - uses: actions/upload-artifact@v2
        with:
          name: sparrow-cli-darwin
          path: ./_cli/dist/sparrow.tar.gz
          retention-days: 1

  create_release:
    needs: [build_test, build_cli_darwin]
    # Note: for deployment, we might need to move to an older version of Ubuntu
    # https://pyinstaller.readthedocs.io/en/stable/usage.html
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url  }}
    steps:

      - name: Get built Sparrow CLI (Linux) 
        uses: actions/download-artifact@v2
        with:
          name: sparrow-cli-linux
          path: sparrow-Linux-x86_64.tar.gz

      - name: Get built Sparrow CLI (Darwin) 
        uses: actions/download-artifact@v2
        with:
          name: sparrow-cli-linux
          path: sparrow-Darwin-x86_64.tar.gz

      # We create the release only if things work both on Linux and Darwin
      # Note: see https://github.com/overhangio/tutor/releases for a well-developed release schedule
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref }}
          name: Sparrow ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            The latest release of Sparrow can be installed using the following command:
            ```
            bash -c "$(curl -fsSL https://raw.githubusercontent.com/EarthCubeGeochron/Sparrow/HEAD/get-sparrow.sh)"
            ```

            - If you want to install this release specifically, you can add it to the above command,
              like so: `bash -c $(...) - ${{ github.ref }}`.
            - You can also download the installation
              script manually and run it using `bash get-sparrow.sh` or `bash get-sparrow.sh $${{ github.ref }}`.
            - For complete control over the installation process, you can manually run the download and installation steps
              encapsulated by the [install script](https://github.com/EarthCubeGeochron/Sparrow/blob/HEAD/get-sparrow.sh).

            See the [Getting started documentation](https://sparrow-data.org/docs/getting-started).
            for more information on how to set up Sparrow.
          files: |
            sparrow-Linux-x86_64.tar.gz
            sparrow-Darwin-x86_64.tar.gz
