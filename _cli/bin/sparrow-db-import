#!/bin/bash
# Description: Import database from binary `pg_dump` archive

[ ! -f "$1" ] \
&& >&2 echo "File "$1" not found" \
&& exit 1

internal_name="/tmp/database-backup.pg-dump"

# Bring up the database if it isn't running
sparrow compose exec db echo 'Running' > /dev/null
isup_db=$?
if [ $isup_db -eq 0 ]; then
  echo "Database isn't running, starting it up..."
  sparrow compose up -d db
fi

sparrow compose exec -T db bash -s <<EOF
mkdir -p /tmp
rm -f "$internal_name"
EOF


container_id=$(sparrow compose ps -q db)

docker exec -i $container_id sh -c "cat > $internal_name" < "$1"

if [ $? -ne 0 ]; then
  >&2 echo "Failed to import database"
  exit 1
fi

if ! sparrow compose exec -T db ls "$internal_name" > /dev/null ; then
  >&2 echo "File $1 not properly copied into docker container"
  exit 1
fi

>&2 echo "Replacing database"

sparrow db await

# Shut down backend if it's up
sparrow compose exec backend echo 'Running' > /dev/null
isup_backend=$?
if [ $isup_backend -ne 0 ]; then
  echo "Backend is running, shutting down..."
  sparrow compose stop backend
fi

# Actually run database migration
sparrow compose exec -T db bash -s <<EOF
dropdb --if-exists -Upostgres sparrow
createdb -Upostgres sparrow
pg_restore -v -Upostgres -d sparrow "$internal_name"
rm -f "$internal_name"
EOF

if [ $isup_db -eq 0 ]; then
  echo "Stopping database"
  sparrow compose stop db
fi

if [ $isup_backend -ne 0 ]; then
  echo "Restarting backend"
  sparrow compose stop db
fi